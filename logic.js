document.addEventListener('DOMContentLoaded', function () {
    const answers = document.querySelectorAll('.answer-block');
    const finishBtn = document.querySelector('[data-finish]');
    const nextBtn = document.querySelector('[data-next]');
    let selectedAnswer = null;

    // Все возможные комбинации для каждого результата
    const results = {
        "result1": [
            "1,1,1,1,1", "1,1,1,1,2", "1,1,1,1,3",
            "1,1,1,2,1", "1,1,1,2,2", "1,1,1,2,3",
            "1,1,1,3,1", "1,1,1,3,2", "1,1,1,3,3",
            "1,1,2,1,1", "1,1,2,1,2", "1,1,2,1,3",
            "1,1,2,2,1", "1,1,2,2,2", "1,1,2,2,3",
            "1,1,2,3,1", "1,1,2,3,2", "1,1,2,3,3",
            "1,1,3,1,1", "1,1,3,1,2", "1,1,3,1,3",
            "1,1,3,2,1", "1,1,3,2,2", "1,1,3,2,3",
            "1,1,3,3,1", "1,1,3,3,2", "1,1,3,3,3",
            "1,2,1,1,1", "1,2,1,1,2", "1,2,1,1,3",
            "1,2,1,2,1", "1,2,1,2,2", "1,2,1,2,3",
            "1,2,1,3,1", "1,2,1,3,2", "1,2,1,3,3",
            "1,2,2,1,1", "1,2,2,1,2", "1,2,2,1,3",
            "1,2,2,2,1", "1,2,2,2,2", "1,2,2,2,3",
            "1,2,2,3,1", "1,2,2,3,2", "1,2,2,3,3",
            "1,2,3,1,1", "1,2,3,1,2", "1,2,3,1,3",
            "1,2,3,2,1", "1,2,3,2,2", "1,2,3,2,3",
            "1,2,3,3,1", "1,2,3,3,2", "1,2,3,3,3"
        ],

        "result2": [
            "3,1,1,1,2", "3,1,1,1,3", "3,1,1,2,2", "3,1,1,2,3", "3,1,1,3,2", "3,1,1,3,3",
            "3,1,2,1,2", "3,1,2,1,3", "3,1,2,2,2", "3,1,2,2,3", "3,1,2,3,2", "3,1,2,3,3",
            "3,1,3,1,2", "3,1,3,1,3", "3,1,3,2,2", "3,1,3,2,3", "3,1,3,3,2", "3,1,3,3,3",
            "3,2,1,1,2", "3,2,1,1,3", "3,2,1,2,2", "3,2,1,2,3", "3,2,1,3,2", "3,2,1,3,3",
            "3,2,2,1,2", "3,2,2,1,3", "3,2,2,2,2", "3,2,2,2,3", "3,2,2,3,2", "3,2,2,3,3",
            "3,2,3,1,2", "3,2,3,1,3", "3,2,3,2,2", "3,2,3,2,3", "3,2,3,3,2", "3,2,3,3,3",

            "3,1,1,1,2", "3,1,1,1,3", "3,1,1,2,2", "3,1,1,2,3", "3,1,1,3,2", "3,1,1,3,3",
            "3,1,2,1,2", "3,1,2,1,3", "3,1,2,2,2", "3,1,2,2,3", "3,1,2,3,2", "3,1,2,3,3",
            "3,1,3,1,2", "3,1,3,1,3", "3,1,3,2,2", "3,1,3,2,3", "3,1,3,3,2", "3,1,3,3,3",
            "3,2,1,1,2", "3,2,1,1,3", "3,2,1,2,2", "3,2,1,2,3", "3,2,1,3,2", "3,2,1,3,3",
            "3,2,2,1,2", "3,2,2,1,3", "3,2,2,2,2", "3,2,2,2,3", "3,2,2,3,2", "3,2,2,3,3",
            "3,2,3,1,2", "3,2,3,1,3", "3,2,3,2,2", "3,2,3,2,3", "3,2,3,3,2", "3,2,3,3,3"
        ],

        "result3": [
            "1,2,2,1,1", "1,2,2,1,2", "1,2,2,1,3",
            "1,2,2,3,1", "1,2,2,3,2", "1,2,2,3,3",
            "1,2,3,1,1", "1,2,3,1,2", "1,2,3,1,3",
            "1,2,3,3,1", "1,2,3,3,2", "1,2,3,3,3",
            "1,3,2,1,1", "1,3,2,1,2", "1,3,2,1,3",
            "1,3,2,3,1", "1,3,2,3,2", "1,3,2,3,3",
            "1,3,3,1,1", "1,3,3,1,2", "1,3,3,1,3",
            "1,3,3,3,1", "1,3,3,3,2", "1,3,3,3,3",
            "2,2,2,1,1", "2,2,2,1,2", "2,2,2,1,3",
            "2,2,2,3,1", "2,2,2,3,2", "2,2,2,3,3",
            "2,2,3,1,1", "2,2,3,1,2", "2,2,3,1,3",
            "2,2,3,3,1", "2,2,3,3,2", "2,2,3,3,3",
            "2,3,2,1,1", "2,3,2,1,2", "2,3,2,1,3",
            "2,3,2,3,1", "2,3,2,3,2", "2,3,2,3,3",
            "2,3,3,1,1", "2,3,3,1,2", "2,3,3,1,3",
            "2,3,3,3,1", "2,3,3,3,2", "2,3,3,3,3", "2,2,2,2,2"
        ],

        "result4": [
            "1,3,1,2,1", "1,3,1,2,2", "1,3,1,2,3",
            "1,3,1,3,1", "1,3,1,3,2", "1,3,1,3,3",
            "1,3,2,2,1", "1,3,2,2,2", "1,3,2,2,3",
            "1,3,2,3,1", "1,3,2,3,2", "1,3,2,3,3",
            "1,3,3,2,1", "1,3,3,2,2", "1,3,3,2,3",
            "1,3,3,3,1", "1,3,3,3,2", "1,3,3,3,3",
            "2,3,1,2,1", "2,3,1,2,2", "2,3,1,2,3",
            "2,3,1,3,1", "2,3,1,3,2", "2,3,1,3,3",
            "2,3,2,2,1", "2,3,2,2,2", "2,3,2,2,3",
            "2,3,2,3,1", "2,3,2,3,2", "2,3,2,3,3",
            "2,3,3,2,1", "2,3,3,2,2", "2,3,3,2,3",
            "2,3,3,3,1", "2,3,3,3,2", "2,3,3,3,3",
            "3,3,1,2,1", "3,3,1,2,2", "3,3,1,2,3",
            "3,3,1,3,1", "3,3,1,3,2", "3,3,1,3,3",
            "3,3,2,2,1", "3,3,2,2,2", "3,3,2,2,3",
            "3,3,2,3,1", "3,3,2,3,2", "3,3,2,3,3",
            "3,3,3,2,1", "3,3,3,2,2", "3,3,3,2,3",
            "3,3,3,3,1", "3,3,3,3,2", "3,3,3,3,3"
        ]
    };

    // Добавляем обработчик клика на ответы
    answers.forEach(block => {
        block.addEventListener('click', () => {
            answers.forEach(b => b.classList.remove('selected')); // Удаляем выделение у всех
            block.classList.add('selected'); // Добавляем выделение выбранному блоку
            selectedAnswer = Number(block.dataset.answer); // Запоминаем выбранный ответ как число

            // Записываем ответ в localStorage, если выбран ответ
            if (selectedAnswer !== null && selectedAnswer !== undefined && selectedAnswer !== "") {
                let currentQuestionIndex = parseInt(document.querySelector(".question").textContent.split("/")[0]) - 1;
                let allAnswers = JSON.parse(localStorage.getItem("milkaAnswers") || "[]");

                if (!Array.isArray(allAnswers)) {
                    allAnswers = [];
                }

                allAnswers[currentQuestionIndex] = selectedAnswer;
                localStorage.setItem("milkaAnswers", JSON.stringify(allAnswers));
            }
        });
    });

    // Проверка перед переходом к следующему вопросу
    if (nextBtn) {
        nextBtn.addEventListener('click', (e) => {
            let currentQuestionIndex = parseInt(document.querySelector(".question").textContent.split("/")[0]) - 1;
            let allAnswers = JSON.parse(localStorage.getItem("milkaAnswers") || "[]");

            if (!Array.isArray(allAnswers)) {
                allAnswers = [];
            }

            // Проверка, выбран ли ответ
            if (!allAnswers[currentQuestionIndex]) {
                e.preventDefault();
                alert("Пожалуйста, выберите ответ перед переходом к следующему вопросу!");
            }
        });
    }

    // Проверка перед завершением теста
    if (finishBtn) {
        finishBtn.addEventListener('click', (e) => {
            let allAnswers = JSON.parse(localStorage.getItem("milkaAnswers") || "[]");

            if (!Array.isArray(allAnswers)) {
                allAnswers = [];
            }

            // Проверка, все ли ответы заполнены
            if (allAnswers.filter(answer => answer !== null && answer !== undefined && answer !== "").length < 5) {
                e.preventDefault();
                alert("Пожалуйста, ответьте на все вопросы перед завершением теста!");
                return;
            }

            const resultKey = allAnswers.join(",");
            console.log("Финальный ключ:", resultKey);

            let resultPage = null;

            // Проверка всех возможных комбинаций
            for (let [milkaType, combinations] of Object.entries(results)) {
                if (combinations.includes(resultKey)) {
                    resultPage = `${milkaType.toLowerCase().replace(/\s+/g, '-')}.html`;
                    break;
                }
            }

            // Если не найдено совпадение, направляем на универсальную страницу (например, "unique-milka.html")
            if (!resultPage) {
                resultPage = "unique-milka.html";
            }
            window.location.href = `./${resultPage}`;
            // Перенаправление на нужную страницу
        });
    }
});
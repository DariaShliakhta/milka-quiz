document.addEventListener('DOMContentLoaded', function () {
    const answers = document.querySelectorAll('.answer-block');
    const finishBtn = document.querySelector('[data-finish]');
    let selectedAnswer = null;

    // Все возможные комбинации для каждого результата
    const results = {
        "result1": [
            "1,1,1,2,1",
            "1,1,1,2,3",
            "1,1,1,3,1",
            "1,1,1,3,3",
            "1,1,2,2,1",
            "1,1,2,2,3",
            "1,1,2,3,1",
            "1,1,2,3,3",
            "1,1,3,2,1",
            "1,1,3,2,3",
            "1,1,3,3,1",
            "1,1,3,3,3",
            "1,2,1,2,1",
            "1,2,1,2,3",
            "1,2,1,3,1",
            "1,2,1,3,3",
            "1,2,2,2,1",
            "1,2,2,2,3",
            "1,2,2,3,1",
            "1,2,2,3,3",
            "1,2,3,2,1",
            "1,2,3,2,3",
            "1,2,3,3,1",
            "1,2,3,3,3"
        ],
        "result2": [
            "3,1,2,1,2",
            "3,1,2,1,3",
            "3,1,2,2,2",
            "3,1,2,2,3",
            "3,1,2,3,2",
            "3,1,2,3,3",
            "3,1,3,1,2",
            "3,1,3,1,3",
            "3,1,3,2,2",
            "3,1,3,2,3",
            "3,1,3,3,2",
            "3,1,3,3,3",
            "3,2,2,1,2",
            "3,2,2,1,3",
            "3,2,2,2,2",
            "3,2,2,2,3",
            "3,2,2,3,2",
            "3,2,2,3,3",
            "3,2,3,1,2",
            "3,2,3,1,3",
            "3,2,3,2,2",
            "3,2,3,2,3",
            "3,2,3,3,2",
            "3,2,3,3,3"
        ],
        "result3": [
            "1,2,2,1,1",
            "1,2,2,1,2",
            "1,2,2,1,3",
            "1,2,2,3,1",
            "1,2,2,3,2",
            "1,2,2,3,3",
            "1,2,3,1,1",
            "1,2,3,1,2",
            "1,2,3,1,3",
            "1,2,3,3,1",
            "1,2,3,3,2",
            "1,2,3,3,3",
            "1,3,2,1,1",
            "1,3,2,1,2",
            "1,3,2,1,3",
            "1,3,2,3,1",
            "1,3,2,3,2",
            "1,3,2,3,3",
            "1,3,3,1,1",
            "1,3,3,1,2",
            "1,3,3,1,3",
            "1,3,3,3,1",
            "1,3,3,3,2",
            "1,3,3,3,3",
            "2,2,2,1,1",
            "2,2,2,1,2",
            "2,2,2,1,3",
            "2,2,2,3,1",
            "2,2,2,3,2",
            "2,2,2,3,3",
            "2,2,3,1,1",
            "2,2,3,1,2",
            "2,2,3,1,3",
            "2,2,3,3,1",
            "2,2,3,3,2",
            "2,2,3,3,3",
            "2,3,2,1,1",
            "2,3,2,1,2",
            "2,3,2,1,3",
            "2,3,2,3,1",
            "2,3,2,3,2",
            "2,3,2,3,3",
            "2,3,3,1,1",
            "2,3,3,1,2",
            "2,3,3,1,3",
            "2,3,3,3,1",
            "2,3,3,3,2",
            "2,3,3,3,3"
        ],
        "result4": [
            "1,3,1,2,1",
            "1,3,1,2,2",
            "1,3,1,2,3",
            "1,3,1,3,1",
            "1,3,1,3,2",
            "1,3,1,3,3",
            "1,3,2,2,1",
            "1,3,2,2,2",
            "1,3,2,2,3",
            "1,3,2,3,1",
            "1,3,2,3,2",
            "1,3,2,3,3",
            "1,3,3,2,1",
            "1,3,3,2,2",
            "1,3,3,2,3",
            "1,3,3,3,1",
            "1,3,3,3,2",
            "1,3,3,3,3",
            "2,3,1,2,1",
            "2,3,1,2,2",
            "2,3,1,2,3",
            "2,3,1,3,1",
            "2,3,1,3,2",
            "2,3,1,3,3",
            "2,3,2,2,1",
            "2,3,2,2,2",
            "2,3,2,2,3",
            "2,3,2,3,1",
            "2,3,2,3,2",
            "2,3,2,3,3",
            "2,3,3,2,1",
            "2,3,3,2,2",
            "2,3,3,2,3",
            "2,3,3,3,1",
            "2,3,3,3,2",
            "2,3,3,3,3",
            "3,3,1,2,1",
            "3,3,1,2,2",
            "3,3,1,2,3",
            "3,3,1,3,1",
            "3,3,1,3,2",
            "3,3,1,3,3",
            "3,3,2,2,1",
            "3,3,2,2,2",
            "3,3,2,2,3",
            "3,3,2,3,1",
            "3,3,2,3,2",
            "3,3,2,3,3",
            "3,3,3,2,1",
            "3,3,3,2,2",
            "3,3,3,2,3",
            "3,3,3,3,1",
            "3,3,3,3,2",
            "3,3,3,3,3"
        ]
    };

    // Добавляем обработчики кликов на ответы
    answers.forEach(block => {
        block.addEventListener('click', () => {
            answers.forEach(b => b.classList.remove('selected'));
            block.classList.add('selected');
            selectedAnswer = block.dataset.answer;

            // Определяем номер текущего вопроса
            let currentQuestionIndex = parseInt(document.querySelector(".question").textContent.split("/")[0]) - 1;
            let allAnswers = JSON.parse(localStorage.getItem("milkaAnswers") || "[]");

            // Записываем ответ пользователя в массив, гарантируя 5 элементов
            allAnswers[currentQuestionIndex] = selectedAnswer;
            localStorage.setItem("milkaAnswers", JSON.stringify(allAnswers));
        });
    });

    if (finishBtn) {
        finishBtn.addEventListener('click', (e) => {
            let allAnswers = JSON.parse(localStorage.getItem("milkaAnswers") || "[]");

            // Проверяем, что все ответы выбраны
            if (allAnswers.length < 5 || allAnswers.includes(undefined) || allAnswers.includes("")) {
                e.preventDefault();
                alert("Пожалуйста, ответьте на все вопросы!");
                return;
            }

            const resultKey = allAnswers.join(",");
            console.log("Финальный ключ:", resultKey);

            let resultPage = null;

            // Проверка всех возможных комбинаций
            for (let [milkaType, combinations] of Object.entries(results)) {
                if (combinations.includes(resultKey)) {
                    resultPage = `${milkaType.toLowerCase().replace(/\s+/g, '-')}.html`;
                    break;
                }
            }

            // Если не найдено совпадение, направляем на универсальную страницу (например, "unique-milka.html")
            if (!resultPage) {
                resultPage = "unique-milka.html";
            }
            window.location.href = resultPage; // Перенаправление на нужную страницу
        });
    }
});
